{"cells":[{"cell_type":"markdown","metadata":{"id":"IWqUiE-9g8DX"},"source":["# Условные операторы (if, elif, else)\n","\n","Условные операторы в Python выглядит следующим образом:\n"]},{"cell_type":"markdown","metadata":{"id":"Ra7b2HeOzM7C"},"source":["## Логический тип данных и условный оператор if"]},{"cell_type":"markdown","metadata":{"id":"oFKRUUbvzM7D"},"source":["В ходе работы над задачей часто приходится проверять выполнимость или невыполнимость каких-то условий. Синтаксис следующий\n","\n","```\n","if <условие1 (булевское выражение)> :\n","    <код, который выполнится, если условие верно>\n","elif <условие2 (булевское выражение)>:\n","    <код, который выполнится, если условие1 было неверно, а условие2 верно>\n","else:\n","    <код, который выполнится, если условие1 и условие2 были неверны>\n","```\n","\n","Обратите внимание, что код, который должен выполняться внутри каждого условия, записывается с отступом в 4 пробела от уровня if, elif и else: в питоне области видимости переменных обозначаются отступами.\n","\n","*То есть, отступы позволяют понять, где начинается код, который должен выполняться при выполнении условия в if, и где заканчивается*\n","\n","Рассмотрим пример: пусть в нашем коде есть переменная x. Пусть мы хотим вывести на экран сообщение \"x отрицателен\", если x<0, \"x равен нулю\", если x=0 и \"x положителен\", если x>0. Код будет следующий:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zGSGj58YzM7E","executionInfo":{"status":"ok","timestamp":1726905437445,"user_tz":-180,"elapsed":5,"user":{"displayName":"Андрей Ринчино","userId":"04004688211480853097"}},"outputId":"9b880c3d-b951-48d9-bb6a-5e6de6e1fb5a"},"outputs":[{"output_type":"stream","name":"stdout","text":["x положителен\n","Done\n"]}],"source":["x = 10\n","\n","if x < 0:\n","    print(\"x отрицателен\")\n","elif x == 0:\n","    print(\"x равен нулю\")\n","else:\n","    print(\"x положителен\")\n","\n","# этот код уже не \"внутри\" else, потому что записан без отступа в 4 пробела. Поэтому он выполнится\n","# в любом случае после отработки if-elif-else\n","print(\"Done\")"]},{"cell_type":"code","source":["x = int(input())\n","y = int(input())\n","\n","if x < y:\n","  print(y - x)\n","elif x == y:\n","  print('числа равны')\n","else:\n","  print(x - y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IRHI98_xmPsP","executionInfo":{"status":"ok","timestamp":1726906008110,"user_tz":-180,"elapsed":4988,"user":{"displayName":"Андрей Ринчино","userId":"04004688211480853097"}},"outputId":"46cbe023-83c7-4c43-8d01-6b69e82c8ddf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n","15\n","5\n"]}]},{"cell_type":"markdown","metadata":{"id":"cdvOH6KDzM7G"},"source":["Конечно, в `if` можно подставлять и более сложные булевские выражения:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N40FqjChzM7H","executionInfo":{"status":"ok","timestamp":1726905437445,"user_tz":-180,"elapsed":5,"user":{"displayName":"Андрей Ринчино","userId":"04004688211480853097"}},"outputId":"1d887879-1b23-4f2d-b261-f799fb5bffb9"},"outputs":[{"output_type":"stream","name":"stdout","text":["10\n","nice\n"]}],"source":["if x > 3 and x < 11 or x==5:\n","    print(x)\n","    # тоже выполнится при выполнения условия после if, так как этот код тоже записан с отступом в 4 пробела\n","    print(\"nice\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G5QFZl5XzM7J","executionInfo":{"status":"ok","timestamp":1726905437446,"user_tz":-180,"elapsed":5,"user":{"displayName":"Андрей Ринчино","userId":"04004688211480853097"}},"outputId":"bfa52ee8-2b33-4512-d6a7-62a5b6f268ef"},"outputs":[{"output_type":"stream","name":"stdout","text":["y not grater than 6\n","x is equal to 3\n"]}],"source":["# if внутри if:\n","x = 3\n","y = 5\n","if x == 3:\n","    if y > 6:\n","        # отступ в 4 пробела от внутреннего if\n","        print(\"y greater than 6\")\n","    else:\n","        print(\"y not grater than 6\")\n","\n","    # отступ в 4 пробела от внешнего if, поэтому код выполнится если x==3 и при любом значении y\n","    print(\"x is equal to 3\")"]},{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"id":"d6EWHaxag8DX"},"outputs":[],"source":["question = 'Can I drive a car'\n","\n","# функция input() - запрашивает ввод значения пользователем\n","\n","age = input(\"Укажите свой возраст: \")  # аргумент - текст сообщения\n","\n","age = int(age) # функция int преобразовывает введённое пользователем значение в целочисленный формат\n","\n","\n","if age >= 18: # Если вам есть 18\n","\n","    answer = 'Yes, you can drive'\n","\n","else: # Иначе\n","\n","    answer = \"No, you can't drive\"\n","\n","print(answer)"]},{"cell_type":"markdown","metadata":{"id":"LcS6s4aGg8DX"},"source":["Замечание 1.  Двоеточие после условия (в конце строки if) обязательно!\n","\n","Замечание 2.  После if и после else!\n","\n","### Замечание 3:\n","#### В питоне группы команд определяются ОТСТУПАМИ! За отступами нужно ВНИМАТЕЛЬНО следить! Отступами могут служить и пробелы и знаки табуляции, причём в любом количестве, главное, чтобы команды из одной группы находились на одном уровне.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"fyTPK6gAg8DX"},"source":["### Замечание 4:\n","\n","В Питоне нет операторных скобок, в отличие от таких языков, как С++ или Java. В этих языках набор команд, которые должны быть выполнены при определённом условии, определяется расположением скобок, например что-то вроде:\n","```\n","ЕСЛИ условие1, ТО {\n","команда1\n","команда2}\n","ИНАЧЕ {\n","команда3}\n","```\n","Здесь команды 1 и 2 выполняются при условии1, иначе выполняется команда3.\n","\n","На питоне это выглядит вот так:\n","```\n","if условие1:\n","    команда1\n","    команда2\n","else:\n","    команда3\n","```\n"]},{"cell_type":"markdown","metadata":{"id":"er8vCEN-g8DX"},"source":["Проверок может быть и несколько сразу:"]},{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"id":"sz_KOa7Ig8DX"},"outputs":[],"source":["question = 'Can I drive a car?'\n","\n","age = int(input(\"Укажите свой возраст: \"))  # Удобно использовать int(input()), если вы запрашиваете число\n","\n","country = 'Russia'\n","#country = 'USA'\n","\n","if age >= 16 and country == 'USA':  # Если вам есть 16 и вы живете в США\n","\n","    answer = 'Yes, you can drive'\n","\n","else:\n","    if age >= 18 and country == 'Russia':  # Если условие выше неверно, но вам есть 18 и вы живете в России\n","\n","        answer = 'Yes, you can drive'\n","\n","    else: # Иначе\n","\n","        answer = \"No, you can't drive\"\n","\n","print(answer)"]},{"cell_type":"markdown","metadata":{"id":"387xBeYHg8DX"},"source":["else + if == elif!"]},{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"id":"yrltsU9Yg8DY"},"outputs":[],"source":["question = 'Can I drive a car?'\n","\n","age = int(input(\"Укажите свой возраст: \"))  # Удобно использовать int(input()), если вы запрашиваете число\n","\n","country = 'Russia'\n","#country = 'USA'\n","\n","if age >= 16 and country == 'USA':  # Если вам есть 16 и вы живете в США\n","\n","    answer = 'Yes, you can drive'\n","\n","#elif - сокращение от else if\n","elif age >= 18 and country == 'Russia':  # Если условие выше неверно, но вам есть 18 и вы живете в России\n","\n","    answer = 'Yes, you can drive'\n","\n","else: # Иначе\n","\n","    answer = \"No, you can't drive\"\n","\n","print(answer)"]},{"cell_type":"markdown","metadata":{"id":"YToh1cmbg8DY"},"source":["## Тернарный условный оператор\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IglspgxCg8DY","outputId":"87a31237-d6cc-4dd2-84a3-c06bfac866e1"},"outputs":[{"data":{"text/plain":["'true'"]},"execution_count":4,"metadata":{},"output_type":"execute_result"},{"data":{"text/plain":["'false'"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["#a if condition else b\n","\n","'true' if True else 'false'\n","'true' if False else 'false'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FJYMplNYg8DY","outputId":"32997056-aff9-4275-f9a2-22b7e3f124ec"},"outputs":[{"name":"stdout","output_type":"stream","text":["5\n","8\n"]}],"source":["#Можно использовать в выражениях\n","\n","x, y = 5, 3  # Да, так можно\n","x, y = y, x  # И так тоже!\n","\n","z = 3 + x if x > y else y\n","\n","print(z)\n","\n","z = 3 + (x if x > y else y) # Внимательнее с порядком вычислений\n","\n","print(z)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"86iftd3qg8DY","outputId":"5985ed1b-aa79-4092-8a74-c0c739313b91"},"outputs":[{"data":{"text/plain":["'teenager'"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["# Можно использовать подряд (но лучше не надо)\n","age = 15\n","'kid' if age < 13 else 'teenager' if age < 18 else 'adult'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p6lbUgMwg8DY","outputId":"26bf131f-1fe9-4974-bf7b-fa7fdc667cdd"},"outputs":[{"name":"stdout","output_type":"stream","text":["The cat is  nice\n","The cat is  nice\n"]}],"source":["# Эквивалентная конструкция:\n","\n","nice = True\n","\n","personality = \"nice\" if nice else \"mean\"\n","print(\"The cat is \", personality)\n","\n","personality = (\"mean\", \"nice\")[nice]\n","print(\"The cat is \", personality)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mc55OiPKfwoh","outputId":"b3c97412-606c-4f9d-fc0f-d3eac469ca64"},"outputs":[{"name":"stdout","output_type":"stream","text":["Введите первую строку:qwerqr\n","Введите целое число:6\n","Введите вторую строку:\n","Ответ неправильный, попробуйте еще раз.\n"]}],"source":["# Задача 1:\n","s1 = input('Введите первую строку:')\n","a = int(input('Введите целое число:'))\n","s2 = input('Введите вторую строку:')\n","# print(len(s))\n","if s1 and not a - 5 and not s2:\n","    print('Правильный ответ')\n","else:\n","    print('Ответ неправильный, попробуйте еще раз.')"]},{"cell_type":"markdown","metadata":{"id":"6Oy2EB1hfwoj"},"source":["1.2) Проверить выполнение следующих логических тождеств (законов де Моргана) для всех значений А и В (FF, FT, TF, TT):"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SPbdzx7ifwoj","outputId":"67a047e3-7f68-4f0b-fc2c-fd4df8a6b1a5"},"outputs":[{"name":"stdout","output_type":"stream","text":["a = True, b = True, res1 = True, res2 = True\n","a = True, b = False, res1 = True, res2 = True\n","a = False, b = True, res1 = True, res2 = True\n","a = False, b = False, res1 = True, res2 = True\n"]}],"source":["for a in [True,False]:\n","    for b in [True,False]:\n","        res1 = (not(a and b) == ((not a) or (not b)))\n","        res2 = (not(a or b) == ((not a) and (not b)))\n","        print(f'a = {a}, b = {b}, res1 = {res1}, res2 = {res2}')"]},{"cell_type":"markdown","metadata":{"id":"Iqsx7sugfwok"},"source":["![Объекты и ссылки на объекты](deMorgan.png)"]},{"cell_type":"markdown","metadata":{"id":"TfI2yR1vfwok"},"source":["2) Записать систему неравенств в одну строку БЕЗ использования and, or, True, False (разрешаются только операции сравнения):\n","* x^2 > 6 - x\n","* x > 0\n","\n","Проверить на x = -5 (False), 3 (True), 1 (False), 0 (False):"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"63uGAPovfwol","outputId":"d929c328-4148-480a-936a-dce78d64f80d"},"outputs":[{"name":"stdout","output_type":"stream","text":["x = -5: False\n","x = -4: False\n","x = -3: False\n","x = -2: False\n","x = -1: False\n","x = 0: False\n","x = 1: False\n","x = 2: False\n","x = 3: True\n","x = 4: True\n","x = 5: True\n","x = 6: True\n"]}],"source":["for x in range(-5,7):\n","    res = (x**2>6-x) == (x>0) == 1 # Должна возвращать True или False в зависимости от значения x\n","    print('x = {}: {}'.format(x, res))"]},{"cell_type":"markdown","metadata":{"id":"rLcQz-kGfwol"},"source":["3) Записать все следующие условия в одну цепочку неравенств (без использования логических операторов):\n","* 0 <= a <= c\n","* 0 <= b < c\n","* b == 2\n","* 0 <= c < 5"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"P3UsXuvNfwom","outputId":"3ef53a79-3d4b-4a14-d1a6-faa31298aa5f"},"outputs":[{"name":"stdout","output_type":"stream","text":["1\n","3\n","3\n"]},{"data":{"text/plain":["False"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["a=int(input())\n","b=int(input())\n","c=int(input())\n","res = (b==2) == (0<=a<=c) ==(0<=b<c) == (0<=c<5) == 1\n","res"]},{"cell_type":"markdown","metadata":{"id":"G0-xENBofwom"},"source":["3.2) Запросить пользователя ввести две строки. Проверить, что первая строка длиннее второй, но при этом находится ближе в лексикографическом порядке. Подобрать пару строк, удовлетворяющую условию."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xdxeUX7Ifwon","outputId":"b9524216-3721-47c6-f8c0-25a4891f501b"},"outputs":[{"name":"stdout","output_type":"stream","text":["hjjjj\n","w\n"]},{"data":{"text/plain":["True"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["s1=input()\n","s2=input()\n","res= (len(s1)>len(s2)) == (s1<s2) == 1\n","res"]},{"cell_type":"markdown","metadata":{"id":"vqTp7OLxfwon"},"source":["4) Записать перечисленные строки в порядке возрастания. Для проверки воспользуйтесь цепочкой из последовательных сравнений (s1 < s2 < s3 < ...), которая должна возвращать True:\n","* s1 = 'string'\n","* s2 = 'String'\n","* s3 = 'strinG'\n","* s4 = 'stringlong'\n","* s5 = ' string'\n","* s6 = 'string '\n","* s7 = '_string'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZrcXxsPIfwon","outputId":"b07aa5c8-aeae-445b-8a82-dd7c8a17e13f"},"outputs":[{"name":"stdout","output_type":"stream","text":[" string String _string strinG string string  stringlong\n","True\n"]}],"source":["s1 = 'string'\n","s2 = 'String'\n","s3 = 'strinG'\n","s4 = 'stringlong'\n","s5 = ' string'\n","s6 = 'string '\n","s7 = '_string'\n","print(s5,s2,s7,s3,s1,s6,s4,sep=' ')\n","print(s5<s2<s7<s3<s1<s6<s4)\n","\n"]},{"cell_type":"markdown","metadata":{"id":"kYbcZ6M-fwon"},"source":["5) Если в произвольной входной строке встречается \"!!!\", выводить на печать \"exclaim\". При этом если строка начинается с \"!!!\", вместо этого выводить \"Nota bene: \" и исходную строку без восклицательных знаков. Если встречается \"???\", то выводить \"question\". Если встречаются оба (\"!!!\" и \"???\"), то ничего не выводить. В других случаях выводить \"random\"."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pDJW1jvIfwoo","outputId":"42188a75-551c-4505-9b93-c4cfc801c09a"},"outputs":[{"name":"stdout","output_type":"stream","text":["!!!sadsa\n","Nota bene:  sadsa\n"]}],"source":["s = input()\n","if ('!!!' in s) and ('???' in s):\n","    pass\n","elif '!!!' in s:\n","    if s.find('!!!')==0:\n","        print('Nota bene: ', s[3:])\n","    else:\n","        print('exclaim')\n","elif '???' in s:\n","    print('question')\n","else:\n","    print('random')\n"]},{"cell_type":"markdown","metadata":{"id":"8XKXTHd3fwoo"},"source":["6) В задании 1 добавить проверку на длину входной строки. Если длина строки больше 5, выполнять инструкцию из задания 1. В противном случае выводить исходную строку три раза подряд через дефис, если количество символов нечетное."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pktZ7dIUfwoo"},"outputs":[],"source":["#???"]},{"cell_type":"markdown","metadata":{"id":"C8vgktzTfwoo"},"source":["7) Протестировать инструкцию: x = a _if_ condition _else_ b на примере: в переменную friend записать x, если в x встречается слово \"banana\", в ином случае записать в нее y.\n","\n","Пример: при x = \"banana monkey\", y = \"orangutan\" значение переменной friend должно быть равно \"banana monkey\"."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KXXJKdfvfwoo","outputId":"f636631f-ab38-4408-e374-b14a98baa19a"},"outputs":[{"name":"stdout","output_type":"stream","text":["banana monkey\n","orangutan\n"]},{"data":{"text/plain":["'banana monkey'"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["x = input()\n","y = input()\n","friend = x if 'banana' in x else y\n","friend"]}],"metadata":{"anaconda-cloud":{},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.5"},"colab":{"provenance":[{"file_id":"1eZHXEHBVfM3sa2TJP8wfOtHVpEXccOrl","timestamp":1728044836887}]}},"nbformat":4,"nbformat_minor":0}